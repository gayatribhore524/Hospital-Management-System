/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.35
 * Generated at: 2025-03-12 17:00:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.doctor;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.entity.Appointment;
import com.db.DBConnect;
import com.dao.AppointmentDAO;
import java.io.*;

public final class generatePDF_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/component/allcss.jsp", Long.valueOf(1740659582556L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("com.dao.AppointmentDAO");
    _jspx_imports_classes.add("com.db.DBConnect");
    _jspx_imports_classes.add("com.entity.Appointment");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    int id = Integer.parseInt(request.getParameter("id"));
    AppointmentDAO dao = new AppointmentDAO(DBConnect.getConn());
    Appointment ap = dao.getAppointmentById(id);

    if (ap == null) {
        out.println("<h3 class='text-center text-danger mt-5'>No Appointment Found</h3>");
        return;
    }

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Appointment Details</title>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write("	integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\"\r\n");
      out.write("	integrity=\"sha512-Fo3rlrZj/k7ujTnHg4CGR2D7kSs0v4LLanw2qksYuRlEzO+tcaEPQogQ0KaoGN26/zrn20ImR1DfuLWnOo7aBA==\"\r\n");
      out.write("	crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\r\n");
      out.write("\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("	integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("/* Background */\r\n");
      out.write("body {\r\n");
      out.write("    background-color: #f8f9fa;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Main Card Styling */\r\n");
      out.write(".appointment-card {\r\n");
      out.write("    max-width: 600px;\r\n");
      out.write("    margin: 50px auto;\r\n");
      out.write("    background: #fff;\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    border-radius: 12px;\r\n");
      out.write("    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Title */\r\n");
      out.write(".card-title {\r\n");
      out.write("    font-size: 24px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    color: #007bff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Table */\r\n");
      out.write(".details-table {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    margin-top: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".details-table th {\r\n");
      out.write("    text-align: left;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    background: #e9f5ff; /* Light Blue */\r\n");
      out.write("    color: #007bff;\r\n");
      out.write("    border-radius: 6px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".details-table td {\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    color: #333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Icon Styling */\r\n");
      out.write(".info-icon {\r\n");
      out.write("    color: #007bff;\r\n");
      out.write("    margin-right: 8px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Button Styling */\r\n");
      out.write(".download-btn {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    padding: 12px;\r\n");
      out.write("    font-size: 18px;\r\n");
      out.write("    border-radius: 8px;\r\n");
      out.write("    background: #007bff;\r\n");
      out.write("    color: #fff;\r\n");
      out.write("    border: none;\r\n");
      out.write("    transition: 0.3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".download-btn:hover {\r\n");
      out.write("    background: #0056b3;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    <div class=\"appointment-card\">\r\n");
      out.write("        <h2 class=\"card-title\">ðŸ“‹ Appointment Details</h2>\r\n");
      out.write("        <table class=\"details-table\">\r\n");
      out.write("            <tr><th><i class=\"fas fa-user info-icon\"></i> Full Name:</th><td>");
      out.print( ap.getFullName() );
      out.write("</td></tr>\r\n");
      out.write("            <tr><th><i class=\"fas fa-venus-mars info-icon\"></i> Gender:</th><td>");
      out.print( ap.getGender() );
      out.write("</td></tr>\r\n");
      out.write("            <tr><th><i class=\"fas fa-birthday-cake info-icon\"></i> Age:</th><td>");
      out.print( ap.getAge() );
      out.write("</td></tr>\r\n");
      out.write("            <tr><th><i class=\"fas fa-calendar-alt info-icon\"></i> Appointment Date:</th><td>");
      out.print( ap.getAppoinDate() );
      out.write("</td></tr>\r\n");
      out.write("            <tr><th><i class=\"fas fa-envelope info-icon\"></i> Email:</th><td>");
      out.print( ap.getEmail() );
      out.write("</td></tr>\r\n");
      out.write("            <tr><th><i class=\"fas fa-phone info-icon\"></i> Mobile No:</th><td>");
      out.print( ap.getPhNo() );
      out.write("</td></tr>\r\n");
      out.write("            <tr><th><i class=\"fas fa-stethoscope info-icon\"></i> Diseases:</th><td>");
      out.print( ap.getDiseases() );
      out.write("</td></tr>\r\n");
      out.write("            <tr><th><i class=\"fas fa-info-circle info-icon\"></i> Status:</th><td>");
      out.print( ap.getStatus() );
      out.write("</td></tr>\r\n");
      out.write("        </table>\r\n");
      out.write("\r\n");
      out.write("        <form action=\"GeneratePDFServlet\" method=\"post\">\r\n");
      out.write("            <input type=\"hidden\" name=\"id\" value=\"");
      out.print( ap.getId() );
      out.write("\">\r\n");
      out.write("            <button type=\"submit\" class=\"download-btn\"><i class=\"fas fa-download\"></i> Download PDF</button>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
